select * from analytics.vw_INTL_Daily_Metrics_Vertical limit 100
;
drop view if exists analytics.vw_INTL_Daily_Metrics_Vertical
;
grant all on analytics.vw_INTL_Daily_Metrics_Vertical to reporting_ro, analytics_team
;
create view analytics.vw_INTL_Daily_Metrics_Vertical as
select
  base_dates.*,
  ifnull(md.Basic_Seekers,0) as 'Basic_Seekers',
  ifnull(md.Paid_Basic_Seekers,0) as 'Paid_Basic_Seekers',
  ifnull(md.Organic_Basic_Seekers,0) as 'Organic_Basic_Seekers',
  ifnull(md.Basic_SEO_Seekers,0) as 'Basic_SEO_Seekers',
  ifnull(md.Basic_SEM_Seekers,0) as 'Basic_SEM_Seekers',
  ifnull(md.Basic_Facebook_Seekers,0) as 'Basic_Facebook_Seekers',
  ifnull(md.OtherOnline_Basic_Seekers,0) as 'OtherOnline_Basic_Seekers',
  ifnull(md.Basic_Direct_Seekers,0) as 'Basic_Direct_Seekers',
  ifnull(md.Paid_Basic_Provider,0) as 'Paid_Basic_Provider',
  ifnull(md.Organic_Basic_Provider,0) as 'Organic_Basic_Provider',
  ifnull(md.Seeker_Day1s,0) as 'Seeker_Day1s',
  ifnull(md.Seeker_NthDays,0) as 'Seeker_NthDays',
  ifnull(md.Seeker_Reupgrades,0) as 'Seeker_Reupgrades',
  ifnull(md.New_Seeker_Premiums,0) as 'New_Seeker_Premiums',
  ifnull(md.Total_Seeker_Premiums,0) as 'Total_Seeker_Premiums',  
  ifnull(md.Paid_Seeker_Premiums,0) as 'Paid_Seeker_Premiums',
  ifnull(md.Organic_Seeker_Premiums,0) as 'Organic_Seeker_Premiums',
  ifnull(md.Paid_New_Seeker_Premiums,0) as 'Paid_New_Seeker_Premiums',
  ifnull(md.Paid_New_Provider_Premiums,0) as 'Paid_New_Provider_Premiums',
  ifnull(md.Organic_New_Provider_Premiums,0) as 'Organic_New_Provider_Premiums',
  ifnull(md.Organic_New_Seeker_Premiums,0) as 'Organic_New_Seeker_Premiums',
  ifnull(md.SEO_NewSeeker_Premiums,0) as 'SEO_NewSeeker_Premiums',
  ifnull(md.SEM_NewSeeker_Premiums,0) as 'SEM_NewSeeker_Premiums',
  ifnull(md.OtherOnline_NewSeeker_Premiums,0) as 'OtherOnline_NewSeeker_Premiums',
  ifnull(md.FB_NewSeeker_Premiums,0) as 'FB_NewSeeker_Premiums',
  ifnull(md.Direct_NewSeeker_Premiums,0) as 'Direct_NewSeeker_Premiums',
  ifnull(md.Basic_Providers,0) as 'Basic_Providers',
  ifnull(md.Provider_Day1s,0) as 'Provider_Day1s',
  ifnull(md.Provider_NthDays,0) as 'Provider_NthDays',
  ifnull(md.Provider_Reupgrades,0) as 'Provider_Reupgrades',
  ifnull(md.New_Provider_Premiums,0) as 'New_Provider_Premiums',
  ifnull(md.Total_Provider_Premiums,0) as 'Total_Provider_Premiums',
  ifnull(md.SEO_NewProvider_Premiums,0) as 'SEO_NewProvider_Premiums',
  ifnull(md.SEM_NewProvider_Premiums,0) as 'SEM_NewProvider_Premiums',
  ifnull(md.FB_NewProvider_Premiums,0) as 'FB_NewProvider_Premiums',
  ifnull(md.Direct_NewProvider_Premiums,0) as 'Direct_NewProvider_Premiums',
  ifnull(md.Paid_Provider_Premiums,0) as 'Paid_Provider_Premiums',
  ifnull(vd.Visitors,0) as 'Visitors',
  ifnull(vd.VHP_Visits,0) as 'VHP_Visits',
  ifnull(vd.VHP_Bounced,0) as 'VHP_Bounced',
  ifnull(bookings.Total_Bookings,0) as 'Total_Bookings',
  ifnull(bookings.Seeker_Total_Bookings,0) as 'Seeker_Total_Bookings',
  ifnull(bookings.Seeker_Initial_Bookings,0) as 'Seeker_Initial_Bookings',
  ifnull(bookings.Seeker_New_Initial_Bookings,0) as 'Seeker_New_Initial_Bookings',
  ifnull(bookings.Seeker_Reup_Initial_Bookings,0) as 'Seeker_Reup_Initial_Bookings',
  ifnull(bookings.Seeker_Recurring_Bookings,0) as 'Seeker_Recurring_Bookings',
  ifnull(bookings.Total_Discounts,0) as 'Total_Discounts',
  ifnull(bookings.Seeker_Discounts,0) as 'Seeker_Discounts',
  ifnull(bookings.Seeker_Initial_Discounts,0) as 'Seeker_Initial_Discounts',
  ifnull(bookings.Seeker_Recurring_Discounts,0) as 'Seeker_Recurring_Discounts',
  ifnull(bookings.Provider_Total_Bookings,0) as 'Provider_Total_Bookings',
  ifnull(bookings.Provider_Initial_Bookings,0) as 'Provider_Initial_Bookings',
  ifnull(bookings.Provider_New_Initial_Bookings,0) as 'Provider_New_Initial_Bookings',
  ifnull(bookings.Provider_Reup_Initial_Bookings,0) as 'Provider_Reup_Initial_Bookings',
  ifnull(bookings.Provider_Recurring_Bookings,0) as 'Provider_Recurring_Bookings',
  ifnull(bookings.Provider_Discounts,0) as 'Provider_Discounts',
  ifnull(bookings.Provider_Initial_Discounts,0) as 'Provider_Initial_Discounts',
  ifnull(bookings.Provider_Recurring_Discounts,0) as 'Provider_Recurring_Discounts',
  ifnull(bookings.Orders,0) as 'Orders',
  ifnull(bookings.Dicounted_Orders,0) as 'Dicounted_Orders',
  ifnull(renewal.Seeker_Renewals,0) as 'Seeker_Renewals',
  ifnull(renewal.Seeker_Potential_Renewals,0) as 'Seeker_Potential_Renewals',
  ifnull(renewal.Seeker_First_Period_Renewals,0) as 'Seeker_First_Period_Renewals',
  ifnull(renewal.Seeker_First_Period_Potential_Renewals,0) as 'Seeker_First_Period_Potential_Renewals',
  ifnull(renewal.Seeker_1_Month_Renewals,0) as 'Seeker_1_Month_Renewals',
  ifnull(renewal.Seeker_1_Month_Potential_Renewals,0) as 'Seeker_1_Month_Potential_Renewals',
  ifnull(renewal.Seeker_3_Month_Renewals,0) as 'Seeker_3_Month_Renewals',
  ifnull(renewal.Seeker_3_Month_Potential_Renewals,0) as 'Seeker_3_Month_Potential_Renewals',
  ifnull(renewal.Seeker_12_Month_Renewals,0) as 'Seeker_12_Month_Renewals',
  ifnull(renewal.Seeker_12_Month_Potential_Renewals,0) as 'Seeker_12_Month_Potential_Renewals', 
  ifnull(renewal.Provider_Renewals,0) as 'Provider_Renewals',
  ifnull(renewal.Provider_Potential_Renewals,0) as 'Provider_Potential_Renewals',
  ifnull(renewal.Provider_First_Period_Renewals,0) as 'Provider_First_Period_Renewals',
  ifnull(renewal.Provider_First_Period_Potential_Renewals,0) as 'Provider_First_Period_Potential_Renewals',
  ifnull(renewal.Provider_1_Month_Renewals,0) as 'Provider_1_Month_Renewals',
  ifnull(renewal.Provider_1_Month_Potential_Renewals,0) as 'Provider_1_Month_Potential_Renewals',
  ifnull(renewal.Provider_3_Month_Renewals,0) as 'Provider_3_Month_Renewals',
  ifnull(renewal.Provider_3_Month_Potential_Renewals,0) as 'Provider_3_Month_Potential_Renewals',
  ifnull(renewal.Provider_6_Month_Renewals,0) as 'Provider_6_Month_Renewals',
  ifnull(renewal.Provider_6_Month_Potential_Renewals,0) as 'Provider_6_Month_Potential_Renewals',
  ifnull(eop.EOP_Premium_Seekers,0) as 'EOP_Premium_Seekers',
  ifnull(eop.EOP_Premium_Providers,0) as 'EOP_Premium_Providers',
  ifnull(spend.Total_Spend,0) as 'Total_Spend',
  ifnull(spend.Seeker_Spend,0) as 'Seeker_Spend',
  ifnull(spend.Provider_Spend,0) as 'Provider_Spend',
  forecast.plan_type as 'plan_type',
  ifnull(forecast.Plan_Visitors,0) as 'Plan_Visitors',
  ifnull(forecast.Plan_Basic_Seeker,0) as 'Plan_Basic_Seeker',
  ifnull(forecast.Plan_SEM_Basic_Seeker,0) as 'Plan_SEM_Basic_Seeker',
  ifnull(forecast.Plan_SEO_Basic_Seeker,0) as 'Plan_SEO_Basic_Seeker',
  ifnull(forecast.Plan_Direct_Basic_Seeker,0) as 'Plan_Direct_Basic_Seeker',
  ifnull(forecast.Plan_Online_Basic_Seeker,0) as 'Plan_Online_Basic_Seeker',
  ifnull(forecast.Plan_Paid_Basic_Seeker,0) as 'Plan_Paid_Basic_Seeker',
  ifnull(forecast.Plan_Organic_Basic_Seeker,0) as 'Plan_Organic_Basic_Seeker',
  ifnull(forecast.Plan_Seeker_AllPremiums,0) as 'Plan_Seeker_AllPremiums',
  ifnull(forecast.Plan_Seeker_Day1s,0) as 'Plan_Seeker_Day1s',
  ifnull(forecast.Plan_Seeker_NthDays,0) as 'Plan_Seeker_NthDays', 
  ifnull(forecast.Plan_New_Seeker_Premiums,0) as 'Plan_New_Seeker_Premiums',
  ifnull(forecast.Plan_Paid_New_Seeker_Premiums,0) as 'Plan_Paid_New_Seeker_Premiums',
  ifnull(forecast.Plan_Paid_Total_Seeker_Premiums,0) as 'Plan_Paid_Total_Seeker_Premiums',
  ifnull(forecast.Plan_New_Seeker_SEM_Premiums,0) as 'Plan_New_Seeker_SEM_Premiums',
  ifnull(forecast.Plan_New_Seeker_SEO_Premiums,0) as 'Plan_New_Seeker_SEO_Premiums',
  ifnull(forecast.Plan_New_Seeker_Direct_Premiums,0) as 'Plan_New_Seeker_Direct_Premiums',
  ifnull(forecast.Plan_New_Seeker_FB_Premiums,0) as 'Plan_New_Seeker_FB_Premiums',
  ifnull(forecast.Plan_New_Seeker_OtherOnline_Premiums,0) as 'Plan_New_Seeker_OtherOnline_Premiums',
  ifnull(forecast.Plan_Seeker_Reupgrades,0) as 'Plan_Seeker_Reupgrades',
  ifnull(forecast.Plan_Total_Spend,0) as 'Plan_Total_Spend',
  ifnull(forecast.Plan_Seeker_Spend,0) as 'Plan_Seeker_Spend',
  ifnull(forecast.Plan_Provider_Spend,0) as 'Plan_Provider_Spend',
  ifnull(forecast.Plan_Total_Bookings,0) as 'Plan_Total_Bookings',
  ifnull(forecast.Plan_Seeker_Total_Bookings,0) as 'Plan_Seeker_Total_Bookings',
  ifnull(forecast.Plan_Provider_Total_Bookings,0) as 'Plan_Provider_Total_Bookings',
  ifnull(forecast.Plan_Provider_Initial_Bookings,0) as 'Plan_Provider_Initial_Bookings',
  ifnull(forecast.Plan_Provider_Initial_Day1_Bookings,0) as 'Plan_Provider_Initial_Day1_Bookings',
  ifnull(forecast.Plan_Provider_Initial_NthDay_Bookings,0) as 'Plan_Provider_Initial_NthDay_Bookings',
  ifnull(forecast.Plan_Provider_Initial_Reupgrade_Bookings,0) as 'Plan_Provider_Initial_Reupgrade_Bookings',
  ifnull(forecast.Plan_Provider_Recurring_Bookings,0) as 'Plan_Provider_Recurring_Bookings',
  ifnull(forecast.Plan_Seeker_Initial_Bookings,0) as 'Plan_Seeker_Initial_Bookings',
  ifnull(forecast.Plan_Seeker_Initial_Day1_Bookings,0) as 'Plan_Seeker_Initial_Day1_Bookings',
  ifnull(forecast.Plan_Seeker_Initial_NthDay_Bookings,0) as 'Plan_Seeker_Initial_NthDay_Bookings',
  ifnull(forecast.Plan_Seeker_Initial_Reupgrade_Bookings,0) as 'Plan_Seeker_Initial_Reupgrade_Bookings',
  ifnull(forecast.Plan_Seeker_Recurring_Bookings,0) as 'Plan_Seeker_Recurring_Bookings',
  ifnull(forecast.Plan_Basic_Providers,0) as 'Plan_Basic_Providers',
  ifnull(forecast.Plan_Provider_AllPremiums,0) as 'Plan_Provider_AllPremiums',
  ifnull(forecast.Plan_New_Paid_Provider_Premiums,0) as 'Plan_New_Paid_Provider_Premiums',
  ifnull(forecast.Plan_New_Organic_Provider_Premiums,0) as 'Plan_New_Organic_Provider_Premiums',
  ifnull(forecast.Plan_New_Provider_Premiums,0) as 'Plan_New_Provider_Premiums',
  ifnull(forecast.Plan_Provider_Reupgrades,0) as 'Plan_Provider_Reupgrades',
  --ifnull(forecast.Plan_Seeker_First_Period_Renewal_Rate,0) as 'Plan_Seeker_First_Period_Renewal_Rate',
  --ifnull(forecast.Plan_Seeker_Blended_Renewal_Rate,0) as 'Plan_Seeker_Blended_Renewal_Rate',
  --ifnull(forecast.Plan_Seeker_Discount_Pct_NewBookings,0) as 'Plan_Seeker_Discount_Pct_NewBookings',
  --ifnull(forecast.Plan_Seeker_EOP_Premiums,0) as 'Plan_Seeker_EOP_Premiums'
  ifnull(SEO_Seeker_ReUpgrades_Event,0) as 'SEO_Seeker_ReUpgrades_Event',
  ifnull(SEM_Seeker_ReUpgrades_Event,0) as 'SEM_Seeker_ReUpgrades_Event',
  ifnull(Email_Seeker_ReUpgrades_Event,0) as 'Email_Seeker_ReUpgrades_Event',
  ifnull(Direct_Seeker_ReUpgrades_Event,0) as 'Direct_Seeker_ReUpgrades_Event',
  ifnull(apps.Total_Apps,0) as 'Total_Apps',
  ifnull(apps.Autoapps,0) as 'Autoapps',
  ifnull(apps.Manual_Apps,0) as 'Manual_Apps',
  ifnull(pc.Completed_Profiles,0) as 'Completed_Profiles'
  
from (
--1. Base dates
  select distinct
    dty.fiscal_year as 'Year_Current',
    dty.fiscal_month as 'Month_Current',
    dty.fiscal_week_of_year as 'Week_of_year_Current',
    dty.week_start_date as 'week_start_date_Current',
    dty.date as 'Date_Current',
    ddd.fiscal_year as 'fiscal_year',
    ddd.Fiscal_quarter as 'Fiscal_quarter',
    ddd.Fiscal_month as 'Fiscal_month',
	  ddd.week_start_date as 'week_start_date',
	  ddd.date as 'date',
	  current_date() as 'run_date',
	  (select ddd.week_start_date from reporting.DW_D_DATE ddd where ddd.date = current_date) as 'run_date_week',
    (select ddd.month_start_date from reporting.DW_D_DATE ddd where ddd.date = current_date) as 'run_date_month',
	  countrycode.countrycode,
	  vertical.vertical,
	  to_char(ddd.fiscal_year) as 'Year',
	  'Actual' as 'DataType',
	  TIMESTAMPADD (day,-7,today.week_start_date) as 'LastWeek',
	  case when (ddd.fiscal_year) = YEAR(NOW()-1) or (ddd.fiscal_year) = YEAR(NOW()-1)-1 or (ddd.fiscal_year) = YEAR(NOW()-1)-2 THEN 1 else 0 end as 'Current_Years_Graph',
	  case when (ddd.fiscal_year) = YEAR(NOW()-1) or (ddd.fiscal_year) = YEAR(NOW()-1)-1 THEN 1 else 0 end as 'Current_Years_Graph_Limited',
    cur.Yesterday as 'Yesterday',
    cur.IsLast7Days as 'IsLast7Days',
    cur.WeekToDate as 'WeekToDate',
    cur.MonthToDate as 'MonthToDate',
    cur.YearToDate as 'YearToDate',
    cur.YearToWeekStart as 'YearToWeekStart',
    cur.LastWeekWTD as 'LastWeekWTD',
    cur.IsCurrentMonth as 'IsCurrentMonth'
  from reporting.DW_D_DATE ddd
    join reporting.DW_D_DATE today on today.date = current_date()
    left join analytics.DW_D_DATE_CURRENT cur on ddd.date = cur.date
    join reporting.DW_D_DATE dty on dty.date = cur.Current_Date_SameDay
  cross join (
    select distinct -- 17 rows
      m.countrycode as 'countrycode'
    from intl.hive_member m
    where date(dateProfileComplete) = '2021-02-16'
    ) countrycode
  cross join (
    select distinct-- 7 rows       
      case 
        when vertical = 'homeCare' then 'Housekeeping' 
        else initcap(lower(vertical))
      end as vertical
    from intl.hive_member
    where date(dateProfileComplete) = '2021-02-16'
    ) vertical
  where
    year(ddd.date) >= year(now())-2
    and year(ddd.date) < year(now())+1
) base_dates

--2. Member Data
left join (
  select
    date,
    countrycode,
    vertical,
    sum(case when member_type = 'Seeker' then basics else 0 end) as 'Basic_Seekers',
    sum(case when member_type = 'Seeker' and channel in ('SEM','Facebook','Online/Aff/Disp') then basics else 0 end) as 'Paid_Basic_Seekers',
    sum(case when member_type = 'Seeker' and channel in ('Facebook','Online/Aff/Disp') then basics else 0 end) as 'OtherOnline_Basic_Seekers',
    sum(case when member_type = 'Seeker' and channel in ('SEO','Direct','Other','Email') then basics else 0 end) as 'Organic_Basic_Seekers',
    sum(case when member_type = 'Seeker' and channel = 'SEO' then basics else 0 end) as 'Basic_SEO_Seekers',
    sum(case when member_type = 'Seeker' and channel = 'SEM' then basics else 0 end) as 'Basic_SEM_Seekers',
    sum(case when member_type = 'Seeker' and channel = 'Facebook' then basics else 0 end) as 'Basic_Facebook_Seekers',
    sum(case when member_type = 'Seeker' and channel = 'Direct' then basics else 0 end) as 'Basic_Direct_Seekers',
    sum(case when member_type = 'Seeker' then day1_premiums else 0 end) as 'Seeker_Day1s',
    sum(case when member_type = 'Seeker' then nth_day_premiums else 0 end) as 'Seeker_NthDays',
    sum(case when member_type = 'Seeker' then reupgrades else 0 end) as 'Seeker_Reupgrades',
    sum(case when member_type = 'Seeker' then day1_premiums+nth_day_premiums else 0 end) as 'New_Seeker_Premiums',
    sum(case when member_type = 'Seeker' then day1_premiums+nth_day_premiums+reupgrades else 0 end) as 'Total_Seeker_Premiums',  
    sum(case when member_type = 'Seeker' and channel in ('SEM','Facebook','Online/Aff/Disp') then day1_premiums+nth_day_premiums+reupgrades else 0 end) as 'Paid_Seeker_Premiums',
    sum(case when member_type = 'Seeker' and channel in ('SEO','Direct','Other','Email') then day1_premiums+nth_day_premiums+reupgrades else 0 end) as 'Organic_Seeker_Premiums', 
    sum(case when member_type = 'Seeker' and channel in ('SEM','Facebook','Online/Aff/Disp') then day1_premiums+nth_day_premiums else 0 end) as 'Paid_New_Seeker_Premiums',
    sum(case when member_type = 'Seeker' and channel in ('SEO','Direct','Other','Email') then day1_premiums+nth_day_premiums else 0 end) as 'Organic_New_Seeker_Premiums',
    sum(case when member_type = 'Provider' and channel in ('SEM','Facebook','Online/Aff/Disp') then day1_premiums+nth_day_premiums else 0 end) as 'Paid_New_Provider_Premiums',
    sum(case when member_type = 'Provider' and channel in ('SEO','Direct','Other','Email') then day1_premiums+nth_day_premiums else 0 end) as 'Organic_New_Provider_Premiums',
    sum(case when member_type = 'Seeker' and channel = 'SEO' then day1_premiums+nth_day_premiums else 0 end) as 'SEO_NewSeeker_Premiums',
    sum(case when member_type = 'Seeker' and channel = 'SEM' then day1_premiums+nth_day_premiums else 0 end) as 'SEM_NewSeeker_Premiums',
    sum(case when member_type = 'Seeker' and channel in ('Facebook','Online/Aff/Disp') then day1_premiums+nth_day_premiums else 0 end) as 'OtherOnline_NewSeeker_Premiums',
    sum(case when member_type = 'Seeker' and channel = 'Facebook' then day1_premiums+nth_day_premiums else 0 end) as 'FB_NewSeeker_Premiums',
    sum(case when member_type = 'Seeker' and channel = 'Direct' then day1_premiums+nth_day_premiums else 0 end) as 'Direct_NewSeeker_Premiums',
    sum(case when member_type = 'Provider' then basics else 0 end) as 'Basic_Providers',
    sum(case when member_type = 'Provider' and channel in ('SEM','Facebook','Online/Aff/Disp') then basics else 0 end) as 'Paid_Basic_Provider',
    sum(case when member_type = 'Provider' and channel in ('SEO','Direct','Other','Email') then basics else 0 end) as 'Organic_Basic_Provider',
    sum(case when member_type = 'Provider' then day1_premiums else 0 end) as 'Provider_Day1s',
    sum(case when member_type = 'Provider' then nth_day_premiums else 0 end) as 'Provider_NthDays',
    sum(case when member_type = 'Provider' then reupgrades else 0 end) as 'Provider_Reupgrades',
    sum(case when member_type = 'Provider' then day1_premiums+nth_day_premiums else 0 end) as 'New_Provider_Premiums',
    sum(case when member_type = 'Provider' and channel in ('SEM','Facebook','Online/Aff/Disp') then day1_premiums+nth_day_premiums+reupgrades else 0 end) as 'Paid_Provider_Premiums',
    sum(case when member_type = 'Provider' then day1_premiums+nth_day_premiums+reupgrades else 0 end) as 'Total_Provider_Premiums',
    sum(case when member_type = 'Provider' and channel = 'SEO' then day1_premiums+nth_day_premiums else 0 end) as 'SEO_NewProvider_Premiums',
    sum(case when member_type = 'Provider' and channel = 'SEM' then day1_premiums+nth_day_premiums else 0 end) as 'SEM_NewProvider_Premiums',
    sum(case when member_type = 'Provider' and channel = 'Facebook' then day1_premiums+nth_day_premiums else 0 end) as 'FB_NewProvider_Premiums',
    sum(case when member_type = 'Provider' and channel = 'Direct' then day1_premiums+nth_day_premiums else 0 end) as 'Direct_NewProvider_Premiums'
  from analytics_prod.INTL_Daily_Subscriptions
  group by 1,2,3
) md on base_dates.date = md.date and base_dates.countrycode = md.countrycode and base_dates.vertical = md.vertical

--3. Visit Data
left join (
  select
    date,
    countrycode,
    'Childcare' as 'vertical', -- Need this as a placeholder for the join as we do not currently have visit data on a vertical level. Visit data on a vertical level should not be used in reports.
    sum(case when returning_member_visit = 'Non Member Visit' then Visitors end) as 'Visitors',
    sum(case when returning_member_visit = 'Non Member Visit' then VHP_Visits end) as 'VHP_Visits',
    sum(case when returning_member_visit = 'Non Member Visit' then VHP_Bounced end) as 'VHP_Bounced'
  from analytics_prod.intl_daily_visits
  group by 1,2
) vd on vd.date = base_dates.date and vd.countrycode = base_dates.countrycode and vd.vertical = base_dates.vertical

--4. Bookings
left join (
select
  date,
  countrycode,
  vertical,
  sum(case when transaction_type = 'Booking' then amount_USD else 0 end) as 'Total_Bookings',
  sum(case when transaction_type = 'Booking' and member_type = 'Seeker' then amount_USD else 0 end) as 'Seeker_Total_Bookings',
  sum(case when transaction_type = 'Booking' and member_type = 'Seeker' and Renewal = 'First' then amount_USD else 0 end) as 'Seeker_Initial_Bookings',
  sum(case when transaction_type = 'Booking' and member_type = 'Seeker' and Renewal = 'First' and Booking_Type = 'Initial_Booking_New' then amount_USD else 0 end) as 'Seeker_New_Initial_Bookings',
  sum(case when transaction_type = 'Booking' and member_type = 'Seeker' and Renewal = 'First' and Booking_Type = 'Initial_Booking_Reup' then amount_USD else 0 end) as 'Seeker_Reup_Initial_Bookings',
  sum(case when transaction_type = 'Booking' and member_type = 'Seeker' and Renewal = 'Renewal' then amount_USD else 0 end) as 'Seeker_Recurring_Bookings',
  sum(case when transaction_type = 'Booking' then discounts_USD else 0 end) as 'Total_Discounts',
  sum(case when transaction_type = 'Booking' and member_type = 'Seeker' then discounts_USD else 0 end) as 'Seeker_Discounts',
  sum(case when transaction_type = 'Booking' and member_type = 'Seeker' and Renewal = 'First' then discounts_USD else 0 end) as 'Seeker_Initial_Discounts',
  sum(case when transaction_type = 'Booking' and member_type = 'Seeker' and Renewal = 'Renewal' then discounts_USD else 0 end) as 'Seeker_Recurring_Discounts',
  sum(case when transaction_type = 'Booking' and member_type = 'Provider' then amount_USD else 0 end) as 'Provider_Total_Bookings',
  sum(case when transaction_type = 'Booking' and member_type = 'Provider' and Renewal = 'First' then amount_USD else 0 end) as 'Provider_Initial_Bookings',
  sum(case when transaction_type = 'Booking' and member_type = 'Provider' and Renewal = 'First' and Booking_Type = 'Initial_Booking_New' then amount_USD else 0 end) as 'Provider_New_Initial_Bookings',
  sum(case when transaction_type = 'Booking' and member_type = 'Provider' and Renewal = 'First' and Booking_Type = 'Initial_Booking_Reup' then amount_USD else 0 end) as 'Provider_Reup_Initial_Bookings',
  sum(case when transaction_type = 'Booking' and member_type = 'Provider' and Renewal = 'Renewal' then amount_USD else 0 end) as 'Provider_Recurring_Bookings',
  sum(case when transaction_type = 'Booking' and member_type = 'Provider' then discounts_USD else 0 end) as 'Provider_Discounts',
  sum(case when transaction_type = 'Booking' and member_type = 'Provider' and Renewal = 'First' then discounts_USD else 0 end) as 'Provider_Initial_Discounts',
  sum(case when transaction_type = 'Booking' and member_type = 'Provider' and Renewal = 'Renewal' then discounts_USD else 0 end) as 'Provider_Recurring_Discounts',
  sum(Orders) as 'Orders',
  sum(Discounted_Orders) as 'Dicounted_Orders'
from analytics_prod.INTL_Daily_Bookings
group by 1,2,3
) bookings on base_dates.date = bookings.date and base_dates.countrycode = bookings.countrycode  and bookings.vertical = base_dates.vertical

--5. Renewals
left join (
  select
    date,
    countrycode,
    vertical,
    sum(case when member_type = 'Seeker' then renewals else 0 end) as 'Seeker_Renewals',
    sum(case when member_type = 'Seeker' then potential_renewals else 0 end) as 'Seeker_Potential_Renewals',
    sum(case when member_type = 'Seeker' and renewal_period = 'First Period Renewal' then renewals else 0 end) as 'Seeker_First_Period_Renewals',
    sum(case when member_type = 'Seeker' and renewal_period = 'First Period Renewal' then potential_renewals else 0 end) as 'Seeker_First_Period_Potential_Renewals',
    sum(case when member_type = 'Seeker' and subscription_length = 1 then renewals else 0 end) as 'Seeker_1_Month_Renewals',
    sum(case when member_type = 'Seeker' and subscription_length = 1 then potential_renewals else 0 end) as 'Seeker_1_Month_Potential_Renewals',
    sum(case when member_type = 'Seeker' and subscription_length = 3 then renewals else 0 end) as 'Seeker_3_Month_Renewals',
    sum(case when member_type = 'Seeker' and subscription_length = 3 then potential_renewals else 0 end) as 'Seeker_3_Month_Potential_Renewals',
    sum(case when member_type = 'Seeker' and subscription_length = 12 then renewals else 0 end) as 'Seeker_12_Month_Renewals',
    sum(case when member_type = 'Seeker' and subscription_length = 12 then potential_renewals else 0 end) as 'Seeker_12_Month_Potential_Renewals', 
    sum(case when member_type = 'Provider' then renewals else 0 end) as 'Provider_Renewals',
    sum(case when member_type = 'Provider' then potential_renewals else 0 end) as 'Provider_Potential_Renewals',
    sum(case when member_type = 'Provider' and renewal_period = 'First Period Renewal' then renewals else 0 end) as 'Provider_First_Period_Renewals',
    sum(case when member_type = 'Provider' and renewal_period = 'First Period Renewal' then potential_renewals else 0 end) as 'Provider_First_Period_Potential_Renewals',
    sum(case when member_type = 'Provider' and subscription_length = 1 then renewals else 0 end) as 'Provider_1_Month_Renewals',
    sum(case when member_type = 'Provider' and subscription_length = 1 then potential_renewals else 0 end) as 'Provider_1_Month_Potential_Renewals',
    sum(case when member_type = 'Provider' and subscription_length = 3 then renewals else 0 end) as 'Provider_3_Month_Renewals',
    sum(case when member_type = 'Provider' and subscription_length = 3 then potential_renewals else 0 end) as 'Provider_3_Month_Potential_Renewals',
    sum(case when member_type = 'Provider' and subscription_length = 6 then renewals else 0 end) as 'Provider_6_Month_Renewals',
    sum(case when member_type = 'Provider' and subscription_length = 6 then potential_renewals else 0 end) as 'Provider_6_Month_Potential_Renewals'
  from analytics_prod.INTL_DAILY_RENEWALS_DOWNGRADES
  group by 1,2,3
) renewal on renewal.date = base_dates.date and renewal.countrycode = base_dates.countrycode and renewal.vertical = base_dates.vertical

--7. EOP
left join (
    select
    ddd.date as 'date',
    m.countrycode,
    case 
      when vertical = 'homeCare' then 'Housekeeping'
      when (m.vertical IS NULL or m.vertical = '') then 'Childcare' 
      else initcap(lower(vertical))
    end as 'vertical',
    count(distinct case when m.role = 'seeker' then s.memberId end) as 'EOP_Premium_Seekers',
    count(distinct case when m.role = 'provider' then s.memberId end) as 'EOP_Premium_Providers'
  from intl.hive_subscription_plan s 
    join intl.hive_member m on s.memberID = m.memberId and m.countrycode = s.countrycode 
    join (select distinct date, week_start_date, month_start_date, fiscal_month_end_date, year from reporting.dw_d_date ddd) ddd 
       on date(s.subscriptionDateCreated) <= ddd.date and date(s.nextPaymentDate) > ddd.date
  where lower(s.type) in ('day1upgrade','daynupgrade', 'reupgrade')
    and year(ddd.date) >= year(now())-2
    and s.subscriptionClass <> 'FreeSubscriptionPlan'
    and ddd.date < current_date
  group by 1,2,3
) eop on base_dates.date = eop.date and base_dates.countrycode = eop.countrycode and eop.vertical = base_dates.vertical

--8. Spend
left join (
  select
    date,
    countrycode,
    'Childcare' as 'vertical', -- Need this as a placeholder for the join as we do not currently have spend data on a vertical level. Spend data on a vertical level should not be used in reports.
    ifnull(sum(Total_SEM_Spend+Total_FB_Spend+Total_OO_Spend+TV_Spend),0) as 'Total_Spend',
    ifnull(sum(Seeker_SEM_Spend+Seeker_FB_Spend+Seeker_OO_Spend+TV_Spend),0) as 'Seeker_Spend',
    ifnull(sum(Provider_SEM_Spend+Provider_FB_Spend+Provider_OO_Spend),0) as 'Provider_Spend'
  from analytics.vw_INTL_Spend
  group by 1,2
) spend on base_dates.date = spend.date and base_dates.countrycode = spend.countrycode and spend.vertical = base_dates.vertical

--9. Forecast Daily Snap + Exec
left join (
  select
    date,
    countrycode,
    plan_type,
    'Childcare' as 'vertical', -- Need this as a placeholder for the join as we do not currently have forecast data on a vertical level. Forecast data on a vertical level should not be used in reports.
    ifnull(sum(Plan_Visitors),0) as 'Plan_Visitors',
    ifnull(sum(Plan_Basic_Seeker),0) as 'Plan_Basic_Seeker',
    ifnull(sum(Plan_SEM_Basic_Seeker),0) as 'Plan_SEM_Basic_Seeker',
    ifnull(sum(Plan_SEO_Basic_Seeker),0) as 'Plan_SEO_Basic_Seeker',
    ifnull(sum(Plan_Direct_Basic_Seeker),0) as 'Plan_Direct_Basic_Seeker',
    ifnull(sum(Plan_Online_Basic_Seeker),0) as 'Plan_Online_Basic_Seeker',   
    ifnull(sum(Plan_SEM_Basic_Seeker+Plan_Online_Basic_Seeker),0) as 'Plan_Paid_Basic_Seeker',
    ifnull(sum(Plan_SEO_Basic_Seeker+Plan_Direct_Basic_Seeker),0) as 'Plan_Organic_Basic_Seeker',
    ifnull(sum(Plan_Seeker_AllPremiums),0) as 'Plan_Seeker_AllPremiums',
    ifnull(sum(Plan_Seeker_Day1s),0) as 'Plan_Seeker_Day1s',
    ifnull(sum(Plan_Seeker_NthDays),0) as 'Plan_Seeker_NthDays',
    ifnull(sum(Plan_New_Seeker_Premiums),0) as 'Plan_New_Seeker_Premiums',
    
    ifnull(sum(Plan_New_Seeker_SEM_Premiums+Plan_New_Seeker_FB_Premiums+Plan_New_Seeker_OtherOnline_Premiums),0) as 'Plan_Paid_New_Seeker_Premiums',
    ifnull(sum(Plan_New_Seeker_SEM_Premiums+Plan_New_Seeker_FB_Premiums+Plan_New_Seeker_OtherOnline_Premiums+Plan_Seeker_Online_Reupgrades+Plan_Seeker_SEM_Reupgrades),0) as 'Plan_Paid_Total_Seeker_Premiums',
    

    ifnull(sum(Plan_New_Seeker_SEM_Premiums),0) as 'Plan_New_Seeker_SEM_Premiums',
    ifnull(sum(Plan_New_Seeker_SEO_Premiums),0) as 'Plan_New_Seeker_SEO_Premiums',
    ifnull(sum(Plan_New_Seeker_Direct_Premiums),0) as 'Plan_New_Seeker_Direct_Premiums',
    ifnull(sum(Plan_New_Seeker_FB_Premiums),0) as 'Plan_New_Seeker_FB_Premiums',
    ifnull(sum(Plan_New_Seeker_FB_Premiums+Plan_New_Seeker_OtherOnline_Premiums),0) as 'Plan_New_Seeker_OtherOnline_Premiums',
    ifnull(sum(Plan_Seeker_Reupgrades),0) as 'Plan_Seeker_Reupgrades',
    ifnull(sum(Plan_Total_Spend),0) as 'Plan_Total_Spend',
    ifnull(sum(Plan_Seeker_Spend),0) as 'Plan_Seeker_Spend',
    ifnull(sum(Plan_Provider_Spend),0) as 'Plan_Provider_Spend',
    ifnull(sum(Plan_Total_Bookings),0) as 'Plan_Total_Bookings',
    ifnull(sum(Plan_Seeker_Total_Bookings),0) as 'Plan_Seeker_Total_Bookings',
    ifnull(sum(Plan_Provider_Total_Bookings),0) as 'Plan_Provider_Total_Bookings',
    ifnull(sum(Plan_Provider_Initial_Bookings),0) as 'Plan_Provider_Initial_Bookings',   
    ifnull(sum(Plan_Provider_Initial_Day1_Bookings),0) as 'Plan_Provider_Initial_Day1_Bookings',
    ifnull(sum(Plan_Provider_Initial_NthDay_Bookings),0) as 'Plan_Provider_Initial_NthDay_Bookings',
    ifnull(sum(Plan_Provider_Initial_Reupgrade_Bookings),0) as 'Plan_Provider_Initial_Reupgrade_Bookings',   
    ifnull(sum(Plan_Provider_Recurring_Bookings),0) as 'Plan_Provider_Recurring_Bookings',
    ifnull(sum(Plan_Seeker_Initial_Bookings),0) as 'Plan_Seeker_Initial_Bookings',
    ifnull(sum(Plan_Seeker_Initial_Day1_Bookings),0) as 'Plan_Seeker_Initial_Day1_Bookings',
    ifnull(sum(Plan_Seeker_Initial_NthDay_Bookings),0) as 'Plan_Seeker_Initial_NthDay_Bookings',
    ifnull(sum(Plan_Seeker_Initial_Reupgrade_Bookings),0) as 'Plan_Seeker_Initial_Reupgrade_Bookings',
    ifnull(sum(Plan_Seeker_Recurring_Bookings),0) as 'Plan_Seeker_Recurring_Bookings',
    ifnull(sum(Plan_Basic_Provider),0) as 'Plan_Basic_Providers',
    ifnull(sum(Plan_Provider_AllPremiums),0) as 'Plan_Provider_AllPremiums',
    ifnull(sum(Plan_New_Provider_Premiums),0) as 'Plan_New_Provider_Premiums',   
    ifnull(sum(Plan_New_Provider_SEO_Premiums+Plan_New_Provider_Direct_Premiums),0) as 'Plan_New_Organic_Provider_Premiums',
    ifnull(sum(Plan_New_Provider_Premiums-Plan_New_Provider_SEO_Premiums-Plan_New_Provider_Direct_Premiums),0) as 'Plan_New_Paid_Provider_Premiums',    
    ifnull(sum(Plan_Provider_Reupgrades),0) as 'Plan_Provider_Reupgrades'
    --ifnull(sum(f.Plan_Seeker_First_Period_Renewal_Rate),0) as 'Plan_Seeker_First_Period_Renewal_Rate',
    --ifnull(sum(f.Plan_Seeker_Blended_Renewal_Rate),0) as 'Plan_Seeker_Blended_Renewal_Rate',
    --ifnull(sum(f.Plan_Seeker_Discount_Pct_NewBookings),0) as 'Plan_Seeker_Discount_Pct_NewBookings',
    --ifnull(sum(f.Plan_Seeker_EOP_Premiums),0) as 'Plan_Seeker_EOP_Premiums'
  from analytics.intl_daily_snapshot_forecast
  group by 1,2,3
) forecast on base_dates.date = forecast.date and base_dates.countrycode = forecast.countrycode and forecast.vertical = base_dates.vertical

--10. Event-based Reupgrades by 4 channels. Use case: INTL Daily Snapshot
left join (
select 
  date(sp.subscriptionDateCreated) as 'date',
  m.countrycode,
  'Childcare' as 'vertical', -- Placeholder
  count(distinct sp.subscriptionId) as 'Reups',
  count(distinct case when up.campaign = 'SEO' then sp.subscriptionId end) as 'SEO_Seeker_ReUpgrades_Event',
  count(distinct case when up.campaign = 'SEM' then sp.subscriptionId end) as 'SEM_Seeker_ReUpgrades_Event',
  count(distinct case when up.campaign = 'Email' then sp.subscriptionId end) as 'Email_Seeker_ReUpgrades_Event',
  count(distinct case when (lower(up.site) like 'careus%' or up.campaign = 'Direct') then sp.subscriptionId end) as 'Direct_Seeker_ReUpgrades_Event'
from intl.transaction t
  join intl.hive_subscription_plan sp on sp.subscriptionId = t.subscription_plan_id and sp.countrycode = t.country_code
    and year(sp.subscriptionDateCreated) >= year(now())-2
  join intl.hive_member m on t.member_id = m.memberid and t.country_code = m.countrycode
    and date(m.dateFirstPremiumSignup) != date(sp.subscriptionDateCreated) -- reupgrades only
    and m.role = 'seeker'
    and m.IsInternalAccount = 'false'
  left join intl.hive_event up on t.member_id = up.memberid and t.country_code = up.countrycode 
    and sp.subscriptionId = up.objectid -- objectid in hive_event is the same as subscriptionid
    and date(up.datecreated) = date(sp.subscriptionDateCreated)
    and up.name = 'Upgrade'
where t.type in ('PriorAuthCapture','AuthAndCapture')
  and t.status = 'SUCCESS'
  and t.amount > 0
group by 1,2,3
) event on base_dates.date = event.date and base_dates.countrycode = event.countrycode and event.vertical = base_dates.vertical

--11. App data
left join (
select
  date(ja.date_created) as 'date',
  ja.country_code as 'countrycode',
  case 
    when m.vertical = 'homeCare' then 'Housekeeping' 
    when (m.vertical IS NULL or m.vertical = '') then 'Childcare' 
    else initcap(lower(m.vertical))
    end as 'vertical',
  count(distinct ja.id) as 'Total_Apps',
  count(distinct case when ja.was_sent_automatically = 'true' then ja.id end) as 'Autoapps',
  count(distinct case when ja.was_sent_automatically = 'false' then ja.id end) as 'Manual_Apps'
from intl.job_application ja
  join intl.hive_member m on m.memberid = ja.member_id and m.countrycode = ja.country_code
where year(ja.date_created) >= year(now())-2
group by 1,2,3
) apps on apps.date = base_dates.date and apps.countrycode = base_dates.countrycode and apps.vertical = base_dates.vertical

-- 12. Profile Completes
left join (
select
  date(pc.datecreated) as 'date',
  pc.countrycode,
  case 
    when m.vertical = 'homeCare' then 'Housekeeping' 
    when (m.vertical IS NULL or m.vertical = '') then 'Childcare' 
    else initcap(lower(m.vertical))
    end as 'vertical',
  count(distinct pc.memberid) as 'Completed_Profiles'
from intl.hive_event pc
  join intl.hive_member m on m.memberid = pc.memberid and m.countrycode = pc.countrycode -- and pc.datecreated >= m.dateprofilecomplete
    and m.IsInternalAccount = 'false'
where pc.year >= year(current_date)-2
  and pc.name = 'ProfileCreate'
  and pc.role = 'provider'
group by 1,2,3
) pc on pc.date = base_dates.date and pc.countrycode = base_dates.countrycode and pc.vertical = base_dates.vertical
