drop view if exists analytics.vw_INTL_Retention_Curves
;
Select * from analytics.vw_INTL_Retention_Curves
;
grant all on analytics.vw_INTL_Retention_Curves to reporting_ro, analytics_team;
;
create view analytics.vw_INTL_Retention_Curves as
select
  Countrycode,Member_Type,Vertical,Channel,Subscription_Length,date((date_trunc('month',current_date())) - interval '1 month') as 'Upgrade_Month',
  Month_No,Members_Survived,avg_retention_6months
from (
    select 
       Countrycode, Member_Type, Vertical, Channel, Subscription_Length, Upgrade_Month, Month_No, Members_Survived, Bookings_Local, RetentionPCT,
       avg(RetentionPCT) over (partition by countrycode, Member_Type, Vertical, Channel, Subscription_Length, Month_No 
                               order by Upgrade_Month range between interval '5' month preceding and current row) as 'avg_retention_6months'
    from (
      select
          Countrycode,Member_Type, Vertical, Channel, Subscription_Length ,Upgrade_Month, Month_No, Members_Survived, Bookings_Local,
          ifnull(sum(case when Month_No <> 0 then Members_Survived end) / sum(case when Month_No = 0 then Members_Survived end)
                  over (partition by Countrycode,Member_Type,Vertical,Channel,Subscription_Length,Upgrade_Month),1) as 'RetentionPCT'
      from (
        select
          countrycode as 'Countrycode',
          initcap(role) as 'Member_Type',
          Vertical,
          Channel,
          Subscription_Length as 'Subscription_Length',
          -- cast(Upgrade_Year as varchar) as 'Upgrade_Year',
          Upgrade_Month as 'Upgrade_Month',
          Month_No,
          count(distinct memberid) as 'Members_Survived',
          ifnull(sum(amount/(1+(vat_percentage/100))),0) as 'Bookings_Local'
        from (
          select
            m.countrycode, m.memberid,m.role,
            case when m.vertical = 'homeCare' then 'Housekeeping' when (m.vertical IS NULL or m.vertical = '') then 'Childcare' else initcap(lower(m.vertical)) end as 'Vertical',
            case when m.channel in ('SEM','Facebook','Online/Aff/Disp') then 'Paid' else 'Organic' end as 'Channel',
            s.currency, s.priceplandurationinmonths as 'Subscription_Length',
            d2.year as 'Upgrade_Year',
            d2.month_start_date as 'Upgrade_Month', 
            d1.month_start_date as 'Transaction_Month',
            datediff('month',d2.month_start_date, d1.month_start_date) as 'Month_No',
            case when lower(p.country_code) = 'ca' and p.region1 = 'Alberta' then 5
                when lower(p.country_code) = 'ca' and p.region1 = 'British Columbia' then 12
                when lower(p.country_code) = 'ca' and p.region1 = 'Manitoba' then 12
                when lower(p.country_code) = 'ca' and p.region1 = 'New Brunswick' then 15
                when lower(p.country_code) = 'ca' and p.region1 = 'Newfoundland' then 15
                when lower(p.country_code) = 'ca' and p.region1 = 'Northwest Territories' then 5
                when lower(p.country_code) = 'ca' and p.region1 = 'Nova Scotia' then 15
                when lower(p.country_code) = 'ca' and p.region1 = 'Nunavut' then 5
                when lower(p.country_code) = 'ca' and p.region1 = 'Ontario' then 13
                when lower(p.country_code) = 'ca' and p.region1 = 'Prince Edward Island' then 15
                when lower(p.country_code) = 'ca' and p.region1 = 'Quebec' then 15
                when lower(p.country_code) = 'ca' and p.region1 = 'Saskatchewan' then 11
                when lower(p.country_code) = 'ca' and p.region1 = 'Yukon Territory' then 5
                else vat.vat_percentage
                end as 'vat_percentage', -- VAT vary from territory/province to territory/province in Canada so we need to add in this piece of code
            t.amount as 'amount'
          from intl.transaction t
            join intl.hive_subscription_plan s on s.subscriptionid = t.subscription_plan_id and t.country_code = s.countrycode
              and year(s.subscriptionDateCreated) >= year(current_date())-4 -- We only need to consider the last 36 months for the retention curves
             -- and month(s.subscriptionDateCreated) <= add_months(date(date_trunc('month',current_date())),-1)
             -- and s.priceplandurationinmonths = 3 /*FOR TESTING*/
            join intl.hive_member m on s.memberID = m.memberId and m.countrycode = t.country_code 
              and m.IsInternalAccount = 'false'                    
              /*and m.role = 'seeker'
              and m.countrycode = 'de'
              and lower(m.vertical) = 'childcare'
              and m.channel = 'SEM'
              and lower(m.vertical) <> 'aupair'*/
              -- and m.countrycode in ('de','uk','ca','au','at','nl')
            join intl.vat_rate vat on vat.vat_region = t.country_code and t.when_processed between vat.from_date and vat.to_date
            join intl.postcode p on p.zip_key = m.postcode and lower(p.country_code) = m.countrycode
            join reporting.dw_d_date d1 on d1.date = date(t.date_created)
            join reporting.dw_d_date d2 on d2.date = date(s.subscriptionDateCreated)
          where 1=1
            and t.type in ('PriorAuthCapture', 'AuthAndCapture')
            and t.status = 'SUCCESS'
            and t.amount > 0
            and d1.date >= d2.date 
          ) base
          where 1=1 
             and Month_No < 36 -- To calculate LTV, we are only interested in the last 36 months
             --and Upgrade_Month <= add_months(date(date_trunc('month',current_date())),-1)
             and
            (
              Subscription_Length = 3 and Month_No in (0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36) or -- There are some fringe values such as month 4 auto renew month for 3 month subs
              Subscription_Length = 1 and Month_No between 0 and 36 or
              Subscription_Length = 12 and Month_No in (0, 12, 24, 36)
              )
          group by 1,2,3,4,5,6,7
        ) base2
      group by 1,2,3,4,5,6,7,8,9
      order by 1,2,3,4,5,6,7
    ) base3
    group by 1,2,3,4,5,6,7,8,9,10 order by 1,2,3,4,5,6,7
) base4
where (
  -- 1m subs
  Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-2) and Month_No in (0,1)
  or Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-3) and Month_No = 2
  or Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-4) and Month_No = 3
  or Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-5) and Month_No = 4
  or Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-6) and Month_No = 5
  or Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-7) and Month_No = 6
  or Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-8) and Month_No = 7
  or Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-9) and Month_No = 8
  or Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-10) and Month_No = 9
  or Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-11) and Month_No = 10
  or Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-12) and Month_No = 11
  or Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-13) and Month_No = 12
  or Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-14) and Month_No = 13
  or Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-15) and Month_No = 14
  or Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-16) and Month_No = 15
  or Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-17) and Month_No = 16
  or Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-18) and Month_No = 17
  or Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-19) and Month_No = 18
  or Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-20) and Month_No = 19
  or Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-21) and Month_No = 20
  or Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-22) and Month_No = 21
  or Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-23) and Month_No = 22
  or Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-24) and Month_No = 23
  or Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-25) and Month_No = 24
  or Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-26) and Month_No = 25
  or Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-27) and Month_No = 26
  or Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-28) and Month_No = 27
  or Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-29) and Month_No = 28
  or Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-30) and Month_No = 29
  or Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-31) and Month_No = 30
  or Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-32) and Month_No = 31
  or Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-33) and Month_No = 32
  or Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-34) and Month_No = 33
  or Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-35) and Month_No = 34
  or Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-36) and Month_No = 35
  or Subscription_Length = 1 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-37) and Month_No = 36
  -- 3m subs
  or Subscription_Length = 3 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-2) and Month_No = 0
  or Subscription_Length = 3 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-5) and Month_No = 3
  or Subscription_Length = 3 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-8) and Month_No = 6
  or Subscription_Length = 3 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-11) and Month_No = 9
  or Subscription_Length = 3 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-14) and Month_No = 12
  or Subscription_Length = 3 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-17) and Month_No = 15
  or Subscription_Length = 3 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-20) and Month_No = 18
  or Subscription_Length = 3 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-23) and Month_No = 21
  or Subscription_Length = 3 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-26) and Month_No = 24
  or Subscription_Length = 3 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-29) and Month_No = 27
  or Subscription_Length = 3 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-32) and Month_No = 30
  or Subscription_Length = 3 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-35) and Month_No = 33
  or Subscription_Length = 3 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-38) and Month_No = 36
  -- 12m subs
  or Subscription_Length = 12 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-2) and Month_No = 0
  or Subscription_Length = 12 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-14) and Month_No = 12
  or Subscription_Length = 12 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-26) and Month_No = 24
  or Subscription_Length = 12 and Upgrade_Month = add_months(date(date_trunc('month',current_date())),-38) and Month_No = 36 
) 
